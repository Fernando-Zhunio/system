# docker image
image: getterminus/angular-ci-images:node14

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

stages:
  - dependencies
  - test
  - build
  - deploy

npm:
  stage: dependencies
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/
  script:
      # - apk add --update npm
      - apt-get install git
      - npm install
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/


jasmine:
  stage: test
  
  dependencies:
    - npm
  script:
    - cp ./src/environments/environment.staging.ts  ./src/environments/environment.ts 
    # - npm i -g @angular/cli
    - npm link @angular/cli@11.2.6
    - npm test -- --browsers=ChromeHeadless --watch=false

staging_build:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-build
    paths:
      - dist/
  script:
    - cp ./src/environments/environment.staging.ts  ./src/environments/environment.ts 
    - npm link @angular/cli@11.2.6
    - npm run build --prod
  dependencies:
    - npm
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/

production_build:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-build
    paths:
      - dist/
  script:
    - npm i -g @angular/cli
    - npm build --prod
  dependencies:
    - npm
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/

staging:
  stage: deploy
  script:
    - *init_ssh
  only:
    - master
  dependencies:
    - staging_build
  



  
# production:
#   stage: deploy
#   script:
#     - *init_ssh
#     - php ./vendor/deployer/deployer/bin/dep deploy prod
#   when: manual
#   only:
#     - master